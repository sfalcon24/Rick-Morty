// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ScreenTabBase story 1`] = `
<RCTScrollView
  collapsable={false}
  handlerTag={1}
  handlerType="NativeViewGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  waitFor={
    [
      {
        "current": null,
      },
    ]
  }
>
  <View>
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingTop": 50,
          },
        ]
      }
    >
      <View
        backgroundColor="#FFFFFF"
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 44,
              "justifyContent": "space-between",
              "paddingRight": 15,
              "width": "100%",
            },
          ]
        }
        variantContainer="default"
      >
        <View
          actionVariant="default"
          style={
            [
              {
                "alignItems": "flex-start",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "marginLeft": 15,
              },
            ]
          }
        />
        <Text
          style={
            [
              {
                "color": "#081F32",
                "fontFamily": "Roboto-Medium",
                "fontSize": 15,
                "letterSpacing": -0.24,
                "lineHeight": 20,
              },
              {},
              [
                {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 2,
                  "flexShrink": 1,
                  "marginBottom": 0,
                  "textAlign": "center",
                },
              ],
            ]
          }
          textVariant="default"
          variant="body15-semibold"
        >
          Filter
        </Text>
        <View
          actionVariant="default"
          style={
            [
              {
                "alignItems": "flex-end",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "marginBottom": 0,
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#5856D6",
                  "borderColor": "#34C759",
                  "borderRadius": 16,
                  "borderWidth": 0,
                  "height": 28,
                  "width": 66,
                },
              ]
            }
            variant="small"
          >
            <RNGestureHandlerButton
              activeOpacity={0.105}
              collapsable={false}
              delayLongPress={600}
              enabled={true}
              handlerTag={2}
              handlerType="NativeViewGestureHandler"
              onActiveStateChange={[Function]}
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              onPress={[Function]}
              style={
                {
                  "alignItems": "center",
                  "borderRadius": 16,
                  "height": 28,
                  "justifyContent": "center",
                }
              }
              underlayColor="black"
              variant="small"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "black",
                    "borderBottomLeftRadius": undefined,
                    "borderBottomRightRadius": undefined,
                    "borderRadius": 16,
                    "borderTopLeftRadius": undefined,
                    "borderTopRightRadius": undefined,
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <Text
                buttonVariant="small"
                style={
                  [
                    {
                      "color": "#081F32",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 13,
                      "letterSpacing": -0.08,
                      "lineHeight": 18,
                    },
                    {},
                    [
                      {
                        "color": "#FFFFFF",
                      },
                    ],
                  ]
                }
                variant="tagline13-tag"
              >
                APPLY
              </Text>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "backgroundColor": "#FFFFFF",
              "height": "100%",
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "paddingBottom": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 60,
                  "justifyContent": "space-between",
                  "paddingBottom": 18,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 18,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "marginLeft": 5,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                exclusive={true}
                handlerTag={3}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "borderColor": "#C7C7CC",
                            "borderRadius": 12,
                            "borderWidth": 1,
                            "height": 24,
                            "justifyContent": "center",
                            "width": 24,
                          },
                          false,
                        ]
                      }
                    />
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <View
              style={
                [
                  {
                    "flexBasis": 0,
                    "flexGrow": 6,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#081F32",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 17,
                      "letterSpacing": -0.41,
                      "lineHeight": 22,
                    },
                    {},
                    [
                      {},
                    ],
                  ]
                }
                variant="body17-semibold"
              >
                Name
              </Text>
              <Text
                numberOfLines={2}
                style={
                  [
                    {
                      "color": "#081F32",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 15,
                      "letterSpacing": -0.24,
                      "lineHeight": 20,
                    },
                    {},
                    [
                      {
                        "color": "#8E8E93",
                      },
                    ],
                  ]
                }
                variant="body15-semibold"
              >
                Give a name
              </Text>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                exclusive={true}
                handlerTag={4}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight="22"
                    bbWidth="22"
                    fill="none"
                    focusable={false}
                    height={22}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "transform": [
                            {
                              "rotateY": "180deg",
                            },
                          ],
                        },
                        {
                          "flex": 0,
                          "height": 22,
                          "width": 22,
                        },
                      ]
                    }
                    vbHeight={21}
                    vbWidth={13}
                    width={22}
                  >
                    <RNSVGGroup
                      fill={null}
                      matrix={
                        [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        clipRule={0}
                        d="M10.0371 20.5827L0.792152 11.4458C0.402616 11.0612 0.402616 10.4398 0.792152 10.0542L10.0371 0.917333C10.5995 0.360889 11.5144 0.360889 12.0777 0.917333C12.64 1.47378 12.64 2.37687 12.0777 2.93332L4.16913 10.7505L12.0777 18.5657C12.64 19.1231 12.64 20.0262 12.0777 20.5827C11.5144 21.1391 10.5995 21.1391 10.0371 20.5827Z"
                        fill={
                          {
                            "payload": 4291940822,
                            "type": 0,
                          }
                        }
                        fillRule={0}
                        propList={
                          [
                            "fill",
                            "fillRule",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "paddingBottom": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 60,
                  "justifyContent": "space-between",
                  "paddingBottom": 18,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 18,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "marginLeft": 5,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                exclusive={true}
                handlerTag={5}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "alignItems": "center",
                            "borderColor": "#C7C7CC",
                            "borderRadius": 12,
                            "borderWidth": 1,
                            "height": 24,
                            "justifyContent": "center",
                            "width": 24,
                          },
                          false,
                        ]
                      }
                    />
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <View
              style={
                [
                  {
                    "flexBasis": 0,
                    "flexGrow": 6,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#081F32",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 17,
                      "letterSpacing": -0.41,
                      "lineHeight": 22,
                    },
                    {},
                    [
                      {},
                    ],
                  ]
                }
                variant="body17-semibold"
              >
                Species
              </Text>
              <Text
                numberOfLines={2}
                style={
                  [
                    {
                      "color": "#081F32",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 15,
                      "letterSpacing": -0.24,
                      "lineHeight": 20,
                    },
                    {},
                    [
                      {
                        "color": "#8E8E93",
                      },
                    ],
                  ]
                }
                variant="body15-semibold"
              >
                Select one
              </Text>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                delayLongPress={600}
                enabled={true}
                exclusive={true}
                handlerTag={6}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight="22"
                    bbWidth="22"
                    fill="none"
                    focusable={false}
                    height={22}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "transform": [
                            {
                              "rotateY": "180deg",
                            },
                          ],
                        },
                        {
                          "flex": 0,
                          "height": 22,
                          "width": 22,
                        },
                      ]
                    }
                    vbHeight={21}
                    vbWidth={13}
                    width={22}
                  >
                    <RNSVGGroup
                      fill={null}
                      matrix={
                        [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        clipRule={0}
                        d="M10.0371 20.5827L0.792152 11.4458C0.402616 11.0612 0.402616 10.4398 0.792152 10.0542L10.0371 0.917333C10.5995 0.360889 11.5144 0.360889 12.0777 0.917333C12.64 1.47378 12.64 2.37687 12.0777 2.93332L4.16913 10.7505L12.0777 18.5657C12.64 19.1231 12.64 20.0262 12.0777 20.5827C11.5144 21.1391 10.5995 21.1391 10.0371 20.5827Z"
                        fill={
                          {
                            "payload": 4291940822,
                            "type": 0,
                          }
                        }
                        fillRule={0}
                        propList={
                          [
                            "fill",
                            "fillRule",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "paddingBottom": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#081F32",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 15,
                  "letterSpacing": -0.24,
                  "lineHeight": 20,
                },
                {},
                [
                  {
                    "color": "#8E8E93",
                    "marginBottom": 10,
                    "marginLeft": 15,
                  },
                ],
              ]
            }
            variant="body15-semibold"
          >
            Status
          </Text>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
          <View
            style={
              [
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={7}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Alive
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#D1D1D6",
                      "height": 1,
                    },
                    {
                      "alignSelf": "flex-end",
                      "width": 330,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={8}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Dead
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#D1D1D6",
                      "height": 1,
                    },
                    {
                      "alignSelf": "flex-end",
                      "width": 330,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={9}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Unknown
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
        </View>
        <View
          style={
            [
              {
                "paddingBottom": 10,
                "paddingTop": 10,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#081F32",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 15,
                  "letterSpacing": -0.24,
                  "lineHeight": 20,
                },
                {},
                [
                  {
                    "color": "#8E8E93",
                    "marginBottom": 10,
                    "marginLeft": 15,
                  },
                ],
              ]
            }
            variant="body15-semibold"
          >
            Gender
          </Text>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
          <View
            style={
              [
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={10}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Female
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#D1D1D6",
                      "height": 1,
                    },
                    {
                      "alignSelf": "flex-end",
                      "width": 330,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={11}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Male
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#D1D1D6",
                      "height": 1,
                    },
                    {
                      "alignSelf": "flex-end",
                      "width": 330,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={12}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Genderless
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#D1D1D6",
                      "height": 1,
                    },
                    {
                      "alignSelf": "flex-end",
                      "width": 330,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 44,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "flex-start",
                        "marginLeft": 5,
                      },
                    ]
                  }
                >
                  <RNGestureHandlerButton
                    collapsable={false}
                    delayLongPress={600}
                    enabled={true}
                    exclusive={true}
                    handlerTag={13}
                    handlerType="NativeViewGestureHandler"
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    rippleColor={0}
                    touchSoundDisabled={false}
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      style={
                        {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderColor": "#C7C7CC",
                                "borderRadius": 12,
                                "borderWidth": 1,
                                "height": 24,
                                "justifyContent": "center",
                                "width": 24,
                              },
                              false,
                            ]
                          }
                        />
                      </View>
                    </View>
                  </RNGestureHandlerButton>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#081F32",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 17,
                        "letterSpacing": -0.41,
                        "lineHeight": 22,
                      },
                      {},
                      [
                        {
                          "marginLeft": 15,
                        },
                      ],
                    ]
                  }
                  variant="body17"
                >
                  Unknown
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              [
                {
                  "backgroundColor": "#D1D1D6",
                  "height": 1,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
